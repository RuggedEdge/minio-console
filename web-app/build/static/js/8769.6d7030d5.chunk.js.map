{"version":3,"file":"static/js/8769.6d7030d5.chunk.js","mappings":"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","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/EventDestinations/TargetTitle.tsx","screens/Console/EventDestinations/AddEventDestination.tsx","screens/Console/EventDestinations/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null,\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport styled from \"styled-components\";\nimport { Box } from \"mds\";\n\ninterface ITargetTitle {\n  logoSrc: string;\n  title: string;\n}\n\nconst TargetBase = styled.div(({ theme }) => ({\n  background: get(theme, \"boxBackground\", \"#fff\"),\n  border: `${get(theme, \"borderColor\", \"#E5E5E5\")} 1px solid`,\n  borderRadius: 5,\n  height: 80,\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"start\",\n  marginBottom: 16,\n  cursor: \"pointer\",\n  padding: 0,\n  overflow: \"hidden\",\n  \"& .logoButton\": {\n    height: \"80px\",\n  },\n  \"& .imageContainer\": {\n    backgroundColor: get(theme, \"bgColor\", \"#fff\"),\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 80,\n    height: 80,\n\n    \"& img\": {\n      maxWidth: 46,\n      maxHeight: 46,\n      filter: \"drop-shadow(1px 1px 8px #fff)\",\n    },\n  },\n  \"& .titleBox\": {\n    color: get(theme, \"fontColor\", \"#000\"),\n    fontSize: 16,\n    fontFamily: \"AllRoundGothic,sans-serif\",\n    paddingLeft: 18,\n  },\n}));\n\nconst TargetTitle = ({ logoSrc, title }: ITargetTitle) => {\n  return (\n    <TargetBase>\n      <Box className={\"imageContainer\"}>\n        <img src={logoSrc} className={\"logoButton\"} alt={title} />\n      </Box>\n\n      <Box className={\"titleBox\"}>\n        <b>{title} Event Destination</b>\n      </Box>\n    </TargetBase>\n  );\n};\n\nexport default TargetTitle;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { BackLink, Button, FormLayout, Grid, InputBox, PageLayout } from \"mds\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport {\n  destinationList,\n  notificationEndpointsFields,\n  notifyMysql,\n  notifyPostgres,\n  removeEmptyFields,\n} from \"./utils\";\nimport { IElementValue } from \"../Configurations/types\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport {\n  setErrorSnackMessage,\n  setHelpName,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport { setDestinationLoading } from \"./destinationsSlice\";\nimport withSuspense from \"../Common/Components/withSuspense\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport TargetTitle from \"./TargetTitle\";\nimport HelpMenu from \"../HelpMenu\";\n\nconst ConfMySql = withSuspense(\n  React.lazy(() => import(\"./CustomForms/ConfMySql\")),\n);\n\nconst ConfTargetGeneric = withSuspense(\n  React.lazy(() => import(\"./ConfTargetGeneric\")),\n);\n\nconst ConfPostgres = withSuspense(\n  React.lazy(() => import(\"./CustomForms/ConfPostgres\")),\n);\n\ninterface IAddNotificationEndpointProps {\n  saveAndRefresh: any;\n}\n\nconst AddEventDestination = ({\n  saveAndRefresh,\n}: IAddNotificationEndpointProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  //Local States\n  const [valuesArr, setValueArr] = useState<IElementValue[]>([]);\n  const [identifier, setIdentifier] = useState<string>(\"\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const service = params.service || \"\";\n\n  //Effects\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesArr),\n      };\n      api.configs\n        .setConfig(`${service}:${identifier}`, payload)\n        .then(() => {\n          setSaving(false);\n          dispatch(setServerNeedsRestart(true));\n          dispatch(setDestinationLoading(true));\n          navigate(IAM_PAGES.EVENT_DESTINATIONS);\n        })\n        .catch((err) => {\n          setSaving(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [\n    saving,\n    service,\n    valuesArr,\n    saveAndRefresh,\n    dispatch,\n    navigate,\n    identifier,\n  ]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue: IElementValue[]) => {\n      setValueArr(newValue);\n    },\n    [setValueArr],\n  );\n\n  let srvComponent;\n  switch (service) {\n    case notifyPostgres: {\n      srvComponent = <ConfPostgres onChange={onValueChange} />;\n      break;\n    }\n    case notifyMysql: {\n      srvComponent = <ConfMySql onChange={onValueChange} />;\n      break;\n    }\n    default: {\n      const fields = get(notificationEndpointsFields, service, []);\n\n      srvComponent = (\n        <ConfTargetGeneric fields={fields} onChange={onValueChange} />\n      );\n    }\n  }\n\n  const targetElement = destinationList.find(\n    (element) => element.actionTrigger === service,\n  );\n\n  useEffect(() => {\n    dispatch(setHelpName(\"add_notification_endpoint\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <Fragment>\n            <BackLink\n              label=\"Event Destinations\"\n              onClick={() => navigate(IAM_PAGES.EVENT_DESTINATIONS_ADD)}\n            />\n          </Fragment>\n        }\n        \n      />\n\n      <PageLayout>\n        <form noValidate onSubmit={submitForm}>\n          {service !== \"\" && (\n            <Fragment>\n              <Grid item xs={12}>\n                {targetElement && (\n                  <TargetTitle\n                    logoSrc={targetElement.logo}\n                    title={targetElement ? targetElement.targetTitle : \"\"}\n                  />\n                )}\n              </Grid>\n              <FormLayout>\n                <InputBox\n                  id={\"identifier-field\"}\n                  name={\"identifier-field\"}\n                  label={\"Identifier\"}\n                  value={identifier}\n                  onChange={(e) => setIdentifier(e.target.value)}\n                  tooltip={\"Unique descriptive string for this destination\"}\n                  placeholder=\"Enter Destination Identifier\"\n                  required\n                />\n                <Grid item xs={12}>\n                  {srvComponent}\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    marginTop: 15,\n                  }}\n                >\n                  <Button\n                    id={\"save-notification-target\"}\n                    type=\"submit\"\n                    variant=\"callAction\"\n                    disabled={saving || identifier.trim() === \"\"}\n                    label={\"Save Event Destination\"}\n                  />\n                </Grid>\n              </FormLayout>\n            </Fragment>\n          )}\n        </form>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddEventDestination;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { NotificationEndpointItem } from \"api/consoleApi\";\nimport { IElementValue } from \"../Configurations/types\";\nimport { TransformedEndpointItem } from \"./types\";\n\nexport const notifyPostgres = \"notify_postgres\";\nexport const notifyMysql = \"notify_mysql\";\nconst notifyKafka = \"notify_kafka\";\nconst notifyAmqp = \"notify_amqp\";\nconst notifyMqtt = \"notify_mqtt\";\nconst notifyRedis = \"notify_redis\";\nconst notifyNats = \"notify_nats\";\nconst notifyElasticsearch = \"notify_elasticsearch\";\nconst notifyWebhooks = \"notify_webhook\";\nconst notifyNsq = \"notify_nsq\";\nexport const notificationTransform = (\n  notificationElements: NotificationEndpointItem[],\n) => {\n  return notificationElements.map((element) => {\n    return {\n      service_name: `${element.service}:${element.account_id}`,\n      name: element.service,\n      account_id: element.account_id,\n      status: element.status,\n    };\n  }) as TransformedEndpointItem[];\n};\n\nexport class DestType {\n  static DB: string = \"database\";\n  static Queue: string = \"queue\";\n  static Func: string = \"functions\";\n}\n\nconst getImgBaseURL = () => {\n  return `${document.baseURI}`;\n};\n\nexport const destinationList = [\n  {\n    actionTrigger: notifyPostgres,\n    targetTitle: \"PostgreSQL\",\n    logo: `${getImgBaseURL()}postgres-logo.svg`,\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyKafka,\n    targetTitle: \"Kafka\",\n    logo: `${getImgBaseURL()}kafka-logo.svg`,\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyAmqp,\n    targetTitle: \"AMQP\",\n    logo: `${getImgBaseURL()}amqp-logo.svg`,\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyMqtt,\n    targetTitle: \"MQTT\",\n    logo: `${getImgBaseURL()}mqtt-logo.svg`,\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyRedis,\n    targetTitle: \"Redis\",\n    logo: `${getImgBaseURL()}redis-logo.svg`,\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyNats,\n    targetTitle: \"NATS\",\n    logo: `${getImgBaseURL()}nats-logo.svg`,\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyMysql,\n    targetTitle: \"Mysql\",\n    logo: `${getImgBaseURL()}mysql-logo.svg`,\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyElasticsearch,\n    targetTitle: \"Elastic Search\",\n    logo: `${getImgBaseURL()}elasticsearch-logo.svg`,\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyWebhooks,\n    targetTitle: \"Webhook\",\n    logo: `${getImgBaseURL()}webhooks-logo.svg`,\n    category: DestType.Func,\n  },\n  {\n    actionTrigger: notifyNsq,\n    targetTitle: \"NSQ\",\n    logo: `${getImgBaseURL()}nsq-logo.svg`,\n    category: DestType.Queue,\n  },\n];\n\nconst commonFields = [\n  {\n    name: \"queue_dir\",\n    label: \"Queue Directory\",\n    required: false,\n\n    tooltip: \"Staging directory for undelivered messages e.g. '/home/events'\",\n    type: \"string\",\n    placeholder: \"Enter Queue Directory\",\n  },\n  {\n    name: \"queue_limit\",\n    label: \"Queue Limit\",\n    required: false,\n\n    tooltip: \"Maximum limit for undelivered messages, defaults to '10000'\",\n    type: \"number\",\n    placeholder: \"Enter Queue Limit\",\n  },\n  {\n    name: \"comment\",\n    label: \"Comment\",\n    required: false,\n    type: \"comment\",\n    placeholder: \"Enter custom notes if any\",\n  },\n];\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const notificationEndpointsFields: any = {\n  [notifyKafka]: [\n    {\n      name: \"brokers\",\n      label: \"Brokers\",\n      required: true,\n\n      tooltip: \"Comma separated list of Kafka broker addresses\",\n      type: \"string\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      label: \"Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"sasl_username\",\n      label: \"SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n    },\n    {\n      name: \"sasl_password\",\n      label: \"SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Password\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      label: \"SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism, default 'PLAIN'\",\n      type: \"string\",\n    },\n    {\n      name: \"tls_client_auth\",\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"Client Auth determines the Kafka server's policy for TLS client authorization\",\n      type: \"string\",\n      placeholder: \"Enter TLS Client Auth\",\n    },\n    {\n      name: \"sasl\",\n      label: \"SASL\",\n      tooltip: \"Set to 'on' to enable SASL authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS skip verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      label: \"client TLS cert\",\n      tooltip: \"Path to client certificate for mTLS authorization\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      label: \"client TLS key\",\n      tooltip: \"Path to client key for mTLS authorization\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Key\",\n    },\n    {\n      name: \"version\",\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster e.g '2.2.0'\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Version\",\n    },\n    ...commonFields,\n  ],\n  [notifyAmqp]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"AMQP server endpoint e.g. `amqp://myuser:mypassword@localhost:5672`\",\n      type: \"url\",\n    },\n    {\n      name: \"exchange\",\n      label: \"Exchange\",\n      tooltip: \"Name of the AMQP exchange\",\n      type: \"string\",\n      placeholder: \"Enter Exchange\",\n    },\n    {\n      name: \"exchange_type\",\n      label: \"Exchange Type\",\n      tooltip: \"AMQP exchange type\",\n      type: \"string\",\n      placeholder: \"Enter Exchange Type\",\n    },\n    {\n      name: \"routing_key\",\n      label: \"Routing Key\",\n      tooltip: \"Routing key for publishing\",\n      type: \"string\",\n      placeholder: \"Enter Routing Key\",\n    },\n    {\n      name: \"mandatory\",\n      label: \"Mandatory\",\n      tooltip:\n        \"Quietly ignore undelivered messages when set to 'off', default is 'on'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"durable\",\n      label: \"Durable\",\n      tooltip:\n        \"Persist queue across broker restarts when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"no_wait\",\n      label: \"No Wait\",\n      tooltip:\n        \"Non-blocking message delivery when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"internal\",\n      label: \"Internal\",\n      tooltip:\n        \"Set to 'on' for exchange to be not used directly by publishers, but only when bound to other exchanges\",\n      type: \"on|off\",\n    },\n    {\n      name: \"auto_deleted\",\n      label: \"Auto Deleted\",\n      tooltip:\n        \"Auto delete queue when set to 'on', when there are no consumers\",\n      type: \"on|off\",\n    },\n    {\n      name: \"delivery_mode\",\n      label: \"Delivery Mode\",\n      tooltip: \"Set to '1' for non-persistent or '2' for persistent queue\",\n      type: \"number\",\n      placeholder: \"Enter Delivery Mode\",\n    },\n    ...commonFields,\n  ],\n  [notifyRedis]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"Redis server's address e.g. `localhost:6379`\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"key\",\n      required: true,\n      label: \"Key\",\n      tooltip: \"Redis key to store/update events, key is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Key\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"Redis server password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    ...commonFields,\n  ],\n  [notifyMqtt]: [\n    {\n      name: \"broker\",\n      required: true,\n      label: \"Broker\",\n      tooltip: \"MQTT server endpoint e.g. `tcp://localhost:1883`\",\n      type: \"uri\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"Name of the MQTT topic to publish\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"MQTT username\",\n      type: \"string\",\n      placeholder: \"Enter Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"MQTT password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    {\n      name: \"qos\",\n      label: \"QOS\",\n      tooltip: \"Set the quality of service priority, defaults to '0'\",\n      type: \"number\",\n      placeholder: \"Enter QOS\",\n    },\n    {\n      name: \"keep_alive_interval\",\n      label: \"Keep Alive Interval\",\n      tooltip: \"Keep-alive interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Keep Alive Interval\",\n    },\n    {\n      name: \"reconnect_interval\",\n      label: \"Reconnect Interval\",\n      tooltip: \"Reconnect interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Reconnect Interval\",\n    },\n    ...commonFields,\n  ],\n  [notifyNats]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"NATS server address e.g. '0.0.0.0:4222'\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"subject\",\n      required: true,\n      label: \"Subject\",\n      tooltip: \"NATS subscription subject\",\n      type: \"string\",\n      placeholder: \"Enter NATS Subject\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"NATS username\",\n      type: \"string\",\n      placeholder: \"Enter NATS Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"NATS password\",\n      type: \"string\",\n      placeholder: \"Enter NATS password\",\n    },\n    {\n      name: \"token\",\n      label: \"Token\",\n      tooltip: \"NATS token\",\n      type: \"string\",\n      placeholder: \"Enter NATS token\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"ping_interval\",\n      label: \"Ping Interval\",\n      tooltip: \"Client ping commands interval in s,m,h,d. Disabled by default\",\n      type: \"duration\",\n      placeholder: \"Enter Ping Interval\",\n    },\n    {\n      name: \"streaming\",\n      label: \"Streaming\",\n      tooltip: \"Set to 'on' to use streaming NATS server\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_async\",\n      label: \"Streaming async\",\n      tooltip: \"Set to 'on' to enable asynchronous publish\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_max_pub_acks_in_flight\",\n      label: \"Streaming max publish ACKS in flight\",\n      tooltip: \"Number of messages to publish without waiting for ACKs\",\n      type: \"number\",\n      placeholder: \"Enter Streaming in flight value\",\n    },\n    {\n      name: \"streaming_cluster_id\",\n      label: \"Streaming Cluster ID\",\n      tooltip: \"Unique ID for NATS streaming cluster\",\n      type: \"string\",\n      placeholder: \"Enter Streaming Cluster ID\",\n    },\n    {\n      name: \"cert_authority\",\n      label: \"Cert Authority\",\n      tooltip: \"Path to certificate chain of the target NATS server\",\n      type: \"string\",\n      placeholder: \"Enter Cert Authority\",\n    },\n    {\n      name: \"client_cert\",\n      label: \"Client Cert\",\n      tooltip: \"Client cert for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_key\",\n      label: \"Client Key\",\n      tooltip: \"Client cert key for NATS mTLS authorization\",\n      type: \"string\",\n      placeholder: \"Enter Client Key\",\n    },\n    ...commonFields,\n  ],\n  [notifyElasticsearch]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"Elasticsearch server's address, with optional authentication info\",\n      type: \"url\",\n      placeholder: \"Enter URL\",\n    },\n    {\n      name: \"index\",\n      required: true,\n      label: \"Index\",\n      tooltip:\n        \"Elasticsearch index to store/update events, index is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Index\",\n    },\n    {\n      name: \"format\",\n      required: true,\n      label: \"Format\",\n      tooltip:\n        \"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\",\n      type: \"enum\",\n      placeholder: \"Enter Format\",\n    },\n    ...commonFields,\n  ],\n  [notifyWebhooks]: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      tooltip:\n        \"Webhook server endpoint e.g. http://localhost:8080/minio/events\",\n      type: \"url\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      label: \"Auth Token\",\n      tooltip: \"Opaque string or JWT authorization token\",\n      type: \"string\",\n      placeholder: \"Enter auth_token\",\n    },\n    ...commonFields,\n  ],\n  [notifyNsq]: [\n    {\n      name: \"nsqd_address\",\n      required: true,\n      label: \"NSQD Address\",\n      tooltip: \"NSQ server address e.g. '127.0.0.1:4150'\",\n      type: \"address\",\n      placeholder: \"Enter nsqd_address\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"NSQ topic\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    ...commonFields,\n  ],\n};\n\nconst serviceToConfigMap: Record<string, string> = {\n  webhook: \"notify_webhook\",\n  amqp: \"notify_amqp\",\n  kafka: \"notify_kafka\",\n  mqtt: \"notify_mqtt\",\n  nats: \"notify_nats\",\n  nsq: \"notify_nsq\",\n  mysql: \"notify_mysql\",\n  postgresql: \"notify_postgres\", //looks different in server response(postgresql as opposed to postgres) from api/admin_notification_endpoints.go\n  elasticsearch: \"notify_elasticsearch\",\n  redis: \"notify_redis\",\n};\n\nexport const getNotificationConfigKey = (serviceName: string) => {\n  return serviceToConfigMap[serviceName];\n};\n"],"names":["WrappedComponent","fallback","arguments","length","undefined","props","_jsx","Suspense","children","TargetBase","styled","div","_ref","theme","background","get","border","borderRadius","height","display","alignItems","justifyContent","marginBottom","cursor","padding","overflow","backgroundColor","width","maxWidth","maxHeight","filter","color","fontSize","fontFamily","paddingLeft","_ref2","logoSrc","title","_jsxs","Box","className","src","alt","ConfMySql","withSuspense","React","ConfTargetGeneric","ConfPostgres","saveAndRefresh","dispatch","useAppDispatch","navigate","useNavigate","params","useParams","valuesArr","setValueArr","useState","identifier","setIdentifier","saving","setSaving","service","useEffect","payload","key_values","removeEmptyFields","api","configs","setConfig","then","setServerNeedsRestart","setDestinationLoading","IAM_PAGES","EVENT_DESTINATIONS","catch","err","setErrorSnackMessage","errorToHandler","error","onValueChange","useCallback","newValue","srvComponent","notifyPostgres","onChange","notifyMysql","fields","notificationEndpointsFields","targetElement","destinationList","find","element","actionTrigger","setHelpName","Fragment","PageHeaderWrapper","label","BackLink","onClick","EVENT_DESTINATIONS_ADD","PageLayout","noValidate","onSubmit","event","preventDefault","Grid","item","xs","TargetTitle","logo","targetTitle","FormLayout","InputBox","id","name","value","e","target","tooltip","placeholder","required","sx","marginTop","Button","type","variant","disabled","trim","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationTransform","notificationElements","map","service_name","account_id","status","DestType","DB","Queue","Func","getImgBaseURL","document","baseURI","category","commonFields","formFields","field","serviceToConfigMap","webhook","amqp","kafka","mqtt","nats","nsq","mysql","postgresql","elasticsearch","redis","getNotificationConfigKey","serviceName"],"sourceRoot":""}